name: docker-build

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  push:
    branches:
      - 'main'
    paths:
      - '.github/workflows/build.yaml'
      - 'senv/Dockerfile'
      - 'senv/fake-entrypoint.sh'
      - 'sneks/constants.py'

jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          [
            # Poetry fails to install due to cryptography not having wheels
            # "3.8.0",
            # "3.8.1",
            # "3.8.2",
            # "3.8.3",
            "3.8.4",
            "3.8.5",
            "3.8.6",
            "3.8.7",
            "3.8.8",
            "3.8.9",
            "3.8.10",
            "3.8.11",
            "3.8.12",
            "3.8.13",
            "3.8.14",
            "3.8.15",
            "3.8.16",
            "3.9.0",
            "3.9.1",
            "3.9.2",
            "3.9.4",
            "3.9.5",
            "3.9.6",
            "3.9.7",
            "3.9.8",
            "3.9.9",
            "3.9.10",
            "3.9.11",
            "3.9.12",
            "3.9.13",
            "3.9.14",
            "3.9.15",
            "3.9.16",
            "3.10.0",
            "3.10.1",
            "3.10.2",
            "3.10.3",
            "3.10.4",
            "3.10.5",
            "3.10.6",
            "3.10.7",
            "3.10.8",
            "3.10.9",
          ]
    steps:
      - uses: actions/checkout@v3

      - name: Read in constants
        shell: bash
        run: |
          pwd
          ls -al
          python sneks/constants.py >> "$GITHUB_ENV"
      - name: Set tag
        shell: bash
        # TODO find a way to single-source this by running Python
        run: |
          VERSION="${{ matrix.python-version }}"
          VERSION_SLUG=${VERSION//[:.]/-}

          IMAGE_TAG=$DOCKER_USERNAME/$PROJECT_NAME:$VERSION$SUFFIX
          SENV=$PROJECT_NAME-$VERSION_SLUG$SUFFIX

          echo "IMAGE_TAG=$IMAGE_TAG" | tee -a "$GITHUB_ENV"
          echo "SENV=$SENV" | tee -a "$GITHUB_ENV"

      - name: Install coiled
        run: pipx install coiled
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./senv
          build-args: "IMAGE=python:${{ matrix.python-version }}"
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.IMAGE_TAG }}
          cache-from: type=registry,ref=${{ env.IMAGE_TAG }}
          cache-to: type=inline


      - name: Make Coiled senv
        shell: bash
        env:
          DASK_COILED__TOKEN: ${{ secrets.COILED_TOKEN }}
        run: coiled env create --name "$SENV" --container "$IMAGE_TAG" --account "$COILED_ACCOUNT_NAME"
